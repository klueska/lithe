------------------------------------------------------------------------
Intel(R) Threading Building Blocks - Release Notes
		  Version 2.1
------------------------------------------------------------------------


System Requirements
-------------------

Intel(R) Threading Building Blocks (Intel(R) TBB) is available
commercially (see http://www.intel.com/software/products/threading) as a
binary distribution, and in open source, in both source and binary
forms (see http://threadingbuildingblocks.org).

When built from source, Intel(R) TBB is intended to be highly portable
and so supports a wide variety of operating systems and platforms (see
http://threadingbuildingblocks.org for more details).

Binary distributions, including commercial distributions, are validated
and officially supported for the hardware, software, operating systems
and compilers listed here.

Hardware - Recommended

    Microsoft* Windows* Systems
	Intel(R) Core(TM) 2 Duo processor or Intel(R) Xeon(R) processor
	    or higher
    Linux* Systems
	Intel(R) Core(TM) 2 Duo processor or Intel(R) Xeon(R) processor
	    or Intel(R) Itanium(R) processor or higher
    Mac OS* X Systems
	Intel(R) Core(TM) 2 Duo processor or higher

Hardware - Supported

    Intel(R) Pentium(R) 4 processor family
    Intel(R) Pentium(R) D processor family
    Intel(R) Xeon(R) processor family
    Intel(R) Core(TM) processor family
    Intel(R) Core(TM) 2 processor family
    Intel(R) Itanium(R) processor family (Linux* systems only)
    Non Intel(R) processors compatible with the above processors

Software - Minimum Requirements

    Supported operating system (see below)
    Supported compiler (see below)
    Xcode* tool suite 2.4.1 or higher (Mac OS* X systems only)
    Microsoft* Internet Explorer* 6.0, or other compatible web browser
    Adobe(R) Reader(R)* 6.0 or higher

Software - Recommended

    Intel(R) C++ Compiler 10.0 or higher
    Intel(R) Thread Checker 3.1 or higher
    Intel(R) Thread Profiler 3.1 or higher

Software - Supported Operating Systems

    Microsoft* Windows* Systems
	Microsoft* Windows* XP Professional
	Microsoft* Windows* Server 2003
	Microsoft* Windows* Vista
	Microsoft* Windows* Server 2008
    Linux* Systems
	Red Hat* Enterprise Linux* 3, 4, 5
	    (when using Red Hat* Enterprise Linux* 4 with Intel(R)
	    Itanium(R) processors, operating system Update 2 or higher
	    is recommended)
	Red Hat* Fedora* Core 8, 9, 10
	    (not with Intel(R) Itanium(R) processors)
	Asianux* 3.0
	Debian* GNU/Linux* 4.0
	Ubuntu* 7.04, 7.10, 8.04, 8.10
	SuSE* Linux* Enterprise Server (SLES) 9, 10
	SGI* Propack* 4.0 (with Intel(R) Itanium(R) processors only)
	SGI* Propack* 5.0 (not with IA-32 architecture processors)
	Turbolinux* GreatTurbo Enterprise Server 10 SP1, Turbolinux* 11
	    (not with Intel(R) Itanium(R) processors)
    Mac OS* X Systems
	Mac OS* X 10.4.9 or higher

Software - Supported Compilers

    Microsoft* Visual C++* 7.1 (Microsoft* Visual Studio* .NET 2003,
	Windows* systems only)
    Microsoft* Visual C++ 8.0 (Microsoft* Visual Studio* 2005,
	Windows* systems only)
    Microsoft* Visual C++ 9.0 (Microsoft* Visual Studio* 2008,
	Windows* systems only)
    Intel(R) C++ Compiler 10.0 or higher
    For each supported Linux* operating system, the standard gcc
	version provided with that operating system is supported,
	including: 3.2, 3.3, 3.4, 4.0, 4.1
    For each supported Mac OS* X operating system, the standard gcc
	version provided with that operating system is supported,
	including: 4.0.1 (Xcode* tool suite 2.4.1 or higher)


Known Issues
------------

Please note the following with respect to this particular release of
Intel(R) Threading Building Blocks.

Library Issues

    - The atomic<long long> and atomic<unsigned long long> templates are
	not supported when using the Microsoft* Visual C++* 7.1
	(Microsoft* Visual Studio* .NET 2003) compiler.

    - Unhandled exceptions in the user code executed in the context of
	TBB algorithms or containers may lead to segmentation faults when
	Intel(R) C++ Compiler 10.x is used with glibc 2.3.2, 2.3.3, or 2.3.4.

    - To allow more accurate results to be obtained with Intel(R) Thread
	Checker or Intel(R) Thread Profiler, download the latest update
	releases of these products before using them with Intel(R)
	Threading Building Blocks.

    - If you are using Intel(R) Threading Building Blocks and OpenMP*
	constructs mixed together in rapid succession in the same
	program, and you are using Intel(R) compilers for your OpenMP*
	code, set KMP_BLOCKTIME to a small value (e.g., 20 milliseconds)
	to improve performance.  This setting can also be made within
	your OpenMP* code via the kmp_set_blocktime() library call.  See
	the Intel(R) compiler OpenMP* documentation for more details on
	KMP_BLOCKTIME and kmp_set_blocktime().

    - In general, non-debug ("release") builds of applications or
	examples should link against the non-debug versions of the
	Intel(R) Threading Building Blocks libraries, and debug builds
	should link against the debug versions of these libraries.  On
	Windows* systems, compile with /MD and use Intel(R) Threading
	Building Blocks release libraries, or compile with /MDd and use
	debug libraries; not doing so may cause run-time failures.  See
	the Tutorial in the product "doc" sub-directory for more details
	on debug vs. release libraries.

    - When using Ubuntu* 7.04 in 64-bit mode, compilations can fail with
	error messages saying that "`::system' has not been declared".
	These failures can be worked around by removing libpthread-dev
	from the system.  See the following link for more details:

	https://bugs.launchpad.net/ubuntu/+source/gcc-4.1/+bug/77559

	- By default, Ubuntu* in 64-bit mode does not install packages 
	required to compile 32-bit applications. Trying to compile 32-bit 
	applications (including TBB examples), you may get errors like:
		/usr/bin/ld: skipping incompatible /usr/lib/libpthread.so when searching for -lpthread
		/usr/bin/ld: skipping incompatible /usr/lib/libpthread.a when searching for -lpthread
		/usr/bin/ld: cannot find -lpthread
	or
		/usr/include/gnu/stubs.h:7:27: error: gnu/stubs-32.h: No such file or directory
	In order to overcome the issue, additional packages should be
	installed, such as gcc-multilib, ia32-libs, and others.
	Refer to your provider of Ubuntu distribution for more details.

------------------------------------------------------------------------
Copyright (C) 2005-2008 Intel Corporation.  All Rights Reserved.

Intel, Pentium, Intel Xeon, Itanium, Intel XScale and VTune are
registered trademarks or trademarks of Intel Corporation or its
subsidiaries in the United States and other countries.

* Other names and brands may be claimed as the property of others.
